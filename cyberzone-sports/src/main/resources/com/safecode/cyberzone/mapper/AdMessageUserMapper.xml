<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.safecode.cyberzone.mapper.AdMessageUserMapper" >
  <resultMap id="BaseResultMap" type="com.safecode.cyberzone.pojo.AdMessageUser" >
    <id column="id_" property="id" jdbcType="BIGINT" />
    <result column="message_id" property="messageId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="if_read" property="ifRead" jdbcType="BIT" />
    <result column="if_collect" property="ifCollect" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="BIGINT" />
    <result column="del_flag" property="delFlag" jdbcType="BIT" />
    <result column="remark_" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ad_message_user
    where id_ = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.safecode.cyberzone.pojo.AdMessageUser" >
    insert into ad_message_user (id_, message_id, user_id, 
      if_read, if_collect, create_time, 
      create_by, update_time, update_by, 
      del_flag, remark_)
    values (#{id,jdbcType=BIGINT}, #{messageId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{ifRead,jdbcType=BIT}, #{ifCollect,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}, 
      #{delFlag,jdbcType=BIT}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.safecode.cyberzone.pojo.AdMessageUser" >
    update ad_message_user
    set message_id = #{messageId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      if_read = #{ifRead,jdbcType=BIT},
      if_collect = #{ifCollect,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=BIT},
      remark_ = #{remark,jdbcType=LONGVARCHAR}
    where id_ = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id_, message_id, user_id, if_read, if_collect, create_time, create_by, update_time, 
    update_by, del_flag, remark_
    from ad_message_user
    where id_ = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id_, message_id, user_id, if_read, if_collect, create_time, create_by, update_time, 
    update_by, del_flag, remark_
    from ad_message_user
  </select>
</mapper>