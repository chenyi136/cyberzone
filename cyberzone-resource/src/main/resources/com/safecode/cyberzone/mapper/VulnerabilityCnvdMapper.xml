<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.safecode.cyberzone.mapper.VulnerabilityCnvdMapper" >
  <resultMap id="BaseResultMap" type="com.safecode.cyberzone.pojo.VulnerabilityCnvd" >
    <id column="id_" property="id" jdbcType="VARCHAR" />
    <result column="number_" property="number" jdbcType="VARCHAR" />
    <result column="cve_number" property="cveNumber" jdbcType="VARCHAR" />
    <result column="cve_url" property="cveUrl" jdbcType="VARCHAR" />
    <result column="title_" property="title" jdbcType="VARCHAR" />
    <result column="serverity_" property="serverity" jdbcType="VARCHAR" />
    <result column="is_event" property="isEvent" jdbcType="VARCHAR" />
    <result column="submit_time" property="submitTime" jdbcType="TIMESTAMP" />
    <result column="open_time" property="openTime" jdbcType="TIMESTAMP" />
    <result column="discoverer_name" property="discovererName" jdbcType="VARCHAR" />
    <result column="patch_name" property="patchName" jdbcType="VARCHAR" />
    <result column="classify_" property="classify" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="BIGINT" />
    <result column="del_flag" property="delFlag" jdbcType="BIT" />
    <result column="bids_xml" property="bidsXml" jdbcType="LONGVARCHAR" />
    <result column="products_xml" property="productsXml" jdbcType="LONGVARCHAR" />
    <result column="reference_link" property="referenceLink" jdbcType="LONGVARCHAR" />
    <result column="formal_way" property="formalWay" jdbcType="LONGVARCHAR" />
    <result column="description_" property="description" jdbcType="LONGVARCHAR" />
    <result column="patch_description" property="patchDescription" jdbcType="LONGVARCHAR" />
    <result column="remark_" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from vulnerability_cnvd
    where id_ = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.safecode.cyberzone.pojo.VulnerabilityCnvd" >
    insert into vulnerability_cnvd (id_, number_, cve_number, 
      cve_url, title_, serverity_, 
      is_event, submit_time, open_time, 
      discoverer_name, patch_name, classify_, 
      create_time, create_by, update_time, 
      update_by, del_flag, bids_xml, 
      products_xml, reference_link, formal_way, 
      description_, patch_description, 
      remark_)
    values (#{id,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, #{cveNumber,jdbcType=VARCHAR}, 
      #{cveUrl,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{serverity,jdbcType=VARCHAR}, 
      #{isEvent,jdbcType=VARCHAR}, #{submitTime,jdbcType=TIMESTAMP}, #{openTime,jdbcType=TIMESTAMP}, 
      #{discovererName,jdbcType=VARCHAR}, #{patchName,jdbcType=VARCHAR}, #{classify,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=BIGINT}, #{delFlag,jdbcType=BIT}, #{bidsXml,jdbcType=LONGVARCHAR}, 
      #{productsXml,jdbcType=LONGVARCHAR}, #{referenceLink,jdbcType=LONGVARCHAR}, #{formalWay,jdbcType=LONGVARCHAR}, 
      #{description,jdbcType=LONGVARCHAR}, #{patchDescription,jdbcType=LONGVARCHAR}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.safecode.cyberzone.pojo.VulnerabilityCnvd" >
    update vulnerability_cnvd
    set number_ = #{number,jdbcType=VARCHAR},
      cve_number = #{cveNumber,jdbcType=VARCHAR},
      cve_url = #{cveUrl,jdbcType=VARCHAR},
      title_ = #{title,jdbcType=VARCHAR},
      serverity_ = #{serverity,jdbcType=VARCHAR},
      is_event = #{isEvent,jdbcType=VARCHAR},
      submit_time = #{submitTime,jdbcType=TIMESTAMP},
      open_time = #{openTime,jdbcType=TIMESTAMP},
      discoverer_name = #{discovererName,jdbcType=VARCHAR},
      patch_name = #{patchName,jdbcType=VARCHAR},
      classify_ = #{classify,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=BIT},
      bids_xml = #{bidsXml,jdbcType=LONGVARCHAR},
      products_xml = #{productsXml,jdbcType=LONGVARCHAR},
      reference_link = #{referenceLink,jdbcType=LONGVARCHAR},
      formal_way = #{formalWay,jdbcType=LONGVARCHAR},
      description_ = #{description,jdbcType=LONGVARCHAR},
      patch_description = #{patchDescription,jdbcType=LONGVARCHAR},
      remark_ = #{remark,jdbcType=LONGVARCHAR}
    where id_ = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id_, number_, cve_number, cve_url, title_, serverity_, is_event, submit_time, 
    open_time, discoverer_name, patch_name, classify_, create_time, create_by, update_time, 
    update_by, del_flag, bids_xml, products_xml, reference_link, formal_way, description_, 
    patch_description, remark_
    from vulnerability_cnvd
    where id_ = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id_, number_, cve_number, cve_url, title_, serverity_, is_event, submit_time, 
    open_time, discoverer_name, patch_name, classify_, create_time, create_by, update_time, 
    update_by, del_flag, bids_xml, products_xml, reference_link, formal_way, description_, 
    patch_description, remark_
    from vulnerability_cnvd
  </select>
  
  <!-- 以下是自定义sql -->
  <select id="findByNumber" resultMap="BaseResultMap" >
    select id_, number_, cve_number, cve_url, title_, serverity_, is_event, submit_time, 
    open_time, discoverer_name, reference_link, formal_way, patch_name, patch_description, 
    classify_, create_time, create_by, update_time, update_by, del_flag, bids_xml, products_xml, 
    description_, remark_
    from vulnerability_cnvd 
    where number_ = #{number}
  </select>
  <!-- CNVD分页列表 -->
   <select id="queryPageList" resultMap="BaseResultMap" parameterType="com.safecode.cyberzone.vo.VulnerabilityCnvdVo">
    select id_, number_, cve_number, cve_url, title_, serverity_, is_event, submit_time, 
    open_time, discoverer_name, reference_link, formal_way, patch_name, patch_description, 
    classify_, create_time, create_by, update_time, update_by, del_flag, bids_xml, products_xml, 
    description_, remark_
    from vulnerability_cnvd
	<where>
    	del_flag = '0'
		<if test="title != null and title != ''">
			AND title_ like CONCAT('%',#{title},'%')
		</if>
		<if test="serverity != null and serverity != ''">
			AND serverity_ = #{serverity}
		</if>
	    <if test="startTime != null and startTime != ''">
			AND open_time &gt;= #{startTime}
		</if>
		<if test="endTime != null and endTime != ''">
			AND open_time &lt;= #{endTime}
		</if>
		<if test="classify != null and classify != ''">
			AND classify_ = #{classify}
		</if>
    </where>
  </select>
  <!-- CNVD详情,关联NVD信息,注意主键类型 -->
  <select id="queryById" resultType="java.util.Map" parameterType="java.lang.String" >
    select cnvd.id_ AS cnvd_id, 
    	 cnvd.number_ AS cnvd_number,
		 cnvd.cve_number AS cnvd_cveNumber, 
		 cnvd.cve_url AS cnvd_cveUrl, 
		 cnvd.title_ AS cnvd_title, 
		 cnvd.serverity_ AS cnvd_serverity, 
		 cnvd.is_event AS cnvd_isEvent, 
		 cnvd.submit_time AS cnvd_submitTime, 
    	 cnvd.open_time AS cnvd_openTime, 
    	 cnvd.discoverer_name AS cnvd_discovererName, 
    	 cnvd.reference_link AS cnvd_referenceLink, 
    	 cnvd.formal_way AS cnvd_formalWay, 
    	 cnvd.patch_name AS cnvd_patchName, 
    	 cnvd.patch_description AS cnvd_patchDescription, 
    	 cnvd.classify_ AS cnvd_classify, 
    	 cnvd.products_xml AS cnvd_productsXml, 
    	 cnvd.description_ AS  cnvd_description,
	     nvd.type_ AS nvd_type, 
	     nvd.name_ AS nvd_name, 
	     nvd.seq_ AS nvd_seq, 
	     nvd.published_ AS nvd_published, 
	     nvd.modified_ AS nvd_modified, 
         nvd.severity_ AS nvd_severity, 
         nvd.cvss_version AS nvd_cvssVersion, 
         nvd.cvss_score AS nvd_cvssScore, 
         nvd.cvss_base_score AS nvd_cvssBaseScore, 
         nvd.cvss_impact_subscore AS nvd_cvssImpactSubscore, 
         nvd.cvss_exploit_subscore AS nvd_cvssExploitSubscore, 
         nvd.cvss_vector AS nvd_cvssVector, 
         nvd.descript_source AS nvd_descriptSource, 
         nvd.descript_ AS nvd_descript, 
         nvd.loss_types_xml AS nvd_lossTypesXml, 
         nvd.refs_xml AS nvd_refsXml, 
         nvd.vuln_soft_xml AS nvd_vulnSoftXml
    from vulnerability_cnvd cnvd
    left join vulnerability_nvd nvd on cnvd.cve_number = nvd.name_
    where cnvd.id_ = #{id}
  </select>
  <!-- 获取最新的更新时间 -->
   <select id="getLastUpdateTime" resultType="java.util.Map" >
    select max(update_time) AS updateTime
    from vulnerability_cnvd 
  </select>
   <!-- 获取威胁情报库的威胁等级及数量(威胁情报库首页的威胁等级) -->
  <select id="getBugCountByServerity" resultType="java.util.Map" >
    select serverity_ as serverity, count(serverity_) count from vulnerability_cnvd where del_flag='0' and serverity_ is not null group by serverity_ 
  </select>
  <!-- 按年度获取威胁数量(威胁情报库首页的时间趋势图) -->
  <select id="getBugCountByYear" resultType="java.util.Map" >
	SELECT
		COUNT(1) AS countNumber,
		YEAR(open_time) as dateTime
		FROM vulnerability_cnvd where del_flag='0' AND open_time IS NOT NULL
		GROUP BY YEAR(open_time)  
  </select>
  <!-- 按时间倒序获取10条数据(威胁情报库首页的重点新闻) -->
  <select id="getKeyNews" resultType="java.util.Map" >
	SELECT * FROM vulnerability_cnvd order by open_time desc limit 0,10 
  </select>
   <!--获取威胁情报的类别及数量(威胁情报库首页的情报类别)-->
  <select id="getBugCountByClassify" resultType="java.util.Map" >
	select classify_ as classify, count(classify_) count 
	from vulnerability_cnvd where del_flag='0' and classify_ is not null
	group by classify_
  </select>
</mapper>